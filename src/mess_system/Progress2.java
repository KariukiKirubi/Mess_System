/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mess_system;

import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Shazka Systems
 */
public class Progress2 extends javax.swing.JFrame {
        
    Connection conn = null;
       PreparedStatement pst =  null;
       ResultSet rs = null;
     int timeRun = 0;
 private Timer t;
 private ActionListener al;

    /**
     * Creates new form Progress2
     */
    public Progress2() {
        initComponents();
         this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/applications.png")));
         new Thread() {
            public void run() {
         while (timeRun == 0) {
                    Calendar cal = new GregorianCalendar();

                    int hour = cal.get(Calendar.HOUR);
                    int min = cal.get(Calendar.MINUTE);
                    int sec = cal.get(Calendar.SECOND);
                    int AM_PM = cal.get(Calendar.AM_PM);
                    
                     int day=cal.get(Calendar.DAY_OF_MONTH);
                    int month=cal.get(Calendar.MONTH)+1;
                    int year=cal.get(Calendar.YEAR);
                    
                   
                    jLday.setText(String.valueOf(day));
                    jLmonth.setText(String.valueOf(month));
                    jLyear.setText(String.valueOf(year));
                    String day_night = "";

                    if (AM_PM == 1) {
                        day_night = "PM";
                    } else {
                        day_night = "AM";
                    }
                    String time = hour + ":" + min + ":" + sec;

                   
                }

            }

        }.start();
        jLmonth.setVisible(true);
        progress();
         t.start();
        try{
        Thread.sleep(250);
        }catch(Exception ex){}
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        load2 = new javax.swing.JLabel();
        jLmonth = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLyear = new javax.swing.JLabel();
        load1 = new javax.swing.JLabel();
        jLday = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jProgressBar1.setToolTipText("Loading Hardware Point Of Sale");
        jProgressBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jProgressBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        jProgressBar1.setStringPainted(true);
        getContentPane().add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 530, 10));

        load2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/details/Loading-Animated-GIF.gif"))); // NOI18N
        jPanel1.add(load2);

        jLmonth.setText("jLabel1");
        jPanel1.add(jLmonth);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/details/globe.gif"))); // NOI18N
        jPanel1.add(jLabel2);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/details/globe.gif"))); // NOI18N
        jPanel1.add(jLabel5);

        jLyear.setText("jLabel1");
        jPanel1.add(jLyear);

        load1.setFont(new java.awt.Font("Texas LED", 0, 24)); // NOI18N
        load1.setText("Loading . . . ");
        jPanel1.add(load1);

        jLday.setText("jLabel1");
        jPanel1.add(jLday);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 135, -1, 0));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STUDENT MESS SYSTEM");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 280, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Food_Icons/preloader_large.gif"))); // NOI18N
        jLabel3.setToolTipText("Loading Hardware System Point Of Sale");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 380, 290));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Food_Icons/preloader_large.gif"))); // NOI18N
        jLabel4.setToolTipText("Loading Hardware System Point Of Sale");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 290));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Food_Icons/preloader_large.gif"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 330, 290));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Food_Icons/preloader_large.gif"))); // NOI18N
        jLabel7.setToolTipText("Loading Hardware System Point Of Sale");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 340, 290));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Progress2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Progress2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Progress2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Progress2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Progress2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLday;
    private javax.swing.JLabel jLmonth;
    private javax.swing.JLabel jLyear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel load1;
    private javax.swing.JLabel load2;
    // End of variables declaration//GEN-END:variables
         public void progress(){
   al = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
          
                if (jProgressBar1.getValue() < 100) {
                    jProgressBar1.setValue(jProgressBar1.getValue() + 1);
                        //getToolkit().beep();  
                    
                     if(((jProgressBar1.getValue()%5)==0)&&(jProgressBar1.getValue()<90)){
                    //  getToolkit().beep(); 
                    }
                     
                     if(jProgressBar1.getValue()>90){
                     // getToolkit().beep(); 
                    }
                     
                    if(jProgressBar1.getValue()==100){
                        
                    }
                } 
                
                
                
                else {
                    t.stop();
                     dispose(); 
                     
                     admin_log m = new admin_log();
                    dispose();
                    m.setVisible(true);
                    
                     
                   //  trial kk=new trial();
                    
//                   admin_log log=new admin_log();
//                        log.setVisible(true);
                
                      
                    
                   

       
                }
            }
        };
        t = new Timer(100, al);
        t.start();
        try{
        Thread.sleep(20);
        }catch(Exception ex){}
   }
         
        
}
